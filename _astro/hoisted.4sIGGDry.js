import{$ as o}from"./hoisted.aKKH8uJq.js";const u=2,d=10;let m=(e,t,s,l)=>(e.events=e.events||{},e.events[s+d]||(e.events[s+d]=l(r=>{e.events[s].reduceRight((i,n)=>(n(i),i),{shared:{},...r})})),e.events[s]=e.events[s]||[],e.events[s].push(t),()=>{let r=e.events[s],i=r.indexOf(t);r.splice(i,1),r.length||(delete e.events[s],e.events[s+d](),delete e.events[s+d])}),c=(e,t)=>m(e,t,u,s=>{let l=e.set,r=e.setKey;return e.setKey&&(e.setKey=(i,n)=>{let a;if(s({abort:()=>{a=!0},changed:i,newValue:{...e.value,[i]:n}}),!a)return r(i,n)}),e.set=i=>{let n;if(s({abort:()=>{n=!0},newValue:i}),!n)return l(i)},()=>{e.set=l,e.setKey=r}});class f extends HTMLElement{aside=this.querySelector("aside");dimmed=this.querySelector("div.dimmed");connectedCallback(){const{aside:t,dimmed:s}=this;if(!t||!s)return;c(o,({newValue:r})=>{if(r){t.classList.add("opened"),s.classList.add("opened");return}t.classList.remove("opened"),s.classList.remove("opened")}),t.querySelector("button[data-menu-close]")?.addEventListener("click",()=>{o.set(!1)}),s.addEventListener("click",()=>{o.set(!1)});const l=Number(sessionStorage.getItem("sidebar-scroll"));l>0&&(t.scrollTop=l),t.addEventListener("scroll",()=>{sessionStorage.setItem("sidebar-scroll",String(t.scrollTop))})}}customElements.define("custom-sidebar",f);
